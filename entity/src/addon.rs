//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "addon")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i32,
    pub category_id: String,
    pub version: String,
    pub date: String,
    pub name: String,
    pub author_name: Option<String>,
    pub file_info_url: Option<String>,
    pub download_total: Option<String>,
    pub download_monthly: Option<String>,
    pub favorite_total: Option<String>,
    pub md5: Option<String>,
    pub file_name: Option<String>,
    pub download: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::addon_dependency::Entity")]
    AddonDependency,
    #[sea_orm(has_many = "super::addon_detail::Entity")]
    AddonDetail,
    #[sea_orm(has_many = "super::addon_dir::Entity")]
    AddonDir,
    #[sea_orm(has_many = "super::addon_image::Entity")]
    AddonImage,
    #[sea_orm(
        belongs_to = "super::category::Entity",
        from = "Column::CategoryId",
        to = "super::category::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Category,
    #[sea_orm(has_many = "super::game_compatibility::Entity")]
    GameCompatibility,
    #[sea_orm(has_many = "super::installed_addon::Entity")]
    InstalledAddon,
    #[sea_orm(has_many = "super::manual_dependency::Entity")]
    ManualDependency,
}

impl Related<super::addon_dependency::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AddonDependency.def()
    }
}

impl Related<super::addon_detail::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AddonDetail.def()
    }
}

impl Related<super::addon_dir::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AddonDir.def()
    }
}

impl Related<super::addon_image::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AddonImage.def()
    }
}

impl Related<super::category::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Category.def()
    }
}

impl Related<super::game_compatibility::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::GameCompatibility.def()
    }
}

impl Related<super::installed_addon::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::InstalledAddon.def()
    }
}

impl Related<super::manual_dependency::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ManualDependency.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
